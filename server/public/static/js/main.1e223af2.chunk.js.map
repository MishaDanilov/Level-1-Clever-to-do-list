{"version":3,"sources":["context/AuthContex.js","hooks/http.hook.js","components/MonthlyEventItems.js","shared.js","components/MonthlyBody.js","components/MonthlyNav.js","hooks/message.hook.js","components/TodoItem.js","components/Modal.js","pages/TasksPage.js","pages/AuthPage.js","routes.js","hooks/auth.hook.js","components/NavBar.js","App.js","hooks/task.hook.js","reportWebVitals.js","index.js"],"names":["noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","changeEvents","taskList","setTaskList","useHttp","useState","loading","setloading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","DefaultMonthlyEventItem","title","date","id","auth","useContext","className","find","elem","done","daysInWeek","locale","enUS","day","label","localize","MonthlyBodyContext","React","headingClasses","l3","l4","l5","l6","l7","MonthlyBody","omitDays","events","children","modal","useMonthlyCalendar","days","headings","daysToRender","filter","includes","getDay","firstDayOfMonth","subtractOmittedDays","length","padding","Array","fill","handleOmittedDays","classes","push","headingClassName","join","map","aria-label","_","index","Provider","value","isSameDay","toISOString","MonthlyDay","renderDay","setModal","dayNumber","format","getDate","onClick","e","openModal","MonthlyNav","currentMonth","onCurrentMonthChange","subMonths","getYear","Date","addMonths","useMessage","text","window","M","toast","html","TodoItem","props","edit","setEdit","content","formEdit","setFormEdit","changeEditForm","event","target","name","useEffect","updateTextFields","href","style","width","setDoneTaskById","type","onChange","htmlFor","color","sendEditTask","removeTaskById","Modal","closeModal","items","hours","minutes","form","setForm","changeForm","addTask","dateR","getFullYear","getMonth","result","concat","removeTask","status","setDoneTask","setDoneValue","Promise","resolve","reject","sendEdit","editForm","taskID","setValue","Fragment","item","indexItem","TasksPage","startOfMonth","setCurrentMonth","console","log","AuthPage","email","password","changeHandler","registerHandler","loginHandler","placeholder","disabled","storageName","NavBar","history","useHistory","to","preventDefault","App","setToken","setUserId","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","useTask","routes","path","exact","useRoutes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e223af2.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nfunction noop() {}\r\n\r\nexport const AuthContext = createContext({\r\n  token: null,\r\n  userId: null,\r\n  login: noop,\r\n  logout: noop,\r\n  isAuthenticated: false,\r\n  changeEvents: noop,\r\n  taskList: [],\r\n  setTaskList: noop,\r\n});\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setloading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setloading(true);\r\n      try {\r\n        if (body) {\r\n          body = JSON.stringify(body);\r\n          headers[\"Content-Type\"] = \"application/json\";\r\n        }\r\n        const urlNew = \"http://localhost:3001\" + url;\r\n        const response = await fetch(url, { method, body, headers });\r\n        const data = await response.json();\r\n        if (!response.ok) {\r\n          throw new Error(data.message || \"Что-то пошло не так.\");\r\n        }\r\n        setloading(false);\r\n        return data;\r\n      } catch (e) {\r\n        setloading(false);\r\n        setError(e.message);\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return { loading, request, error, clearError };\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContex\";\r\n\r\nexport const DefaultMonthlyEventItem = ({ title, date, id }) => {\r\n  const auth = useContext(AuthContext);\r\n  return (\r\n    <li className=\"py-2\">\r\n      <div className=\"flex text-sm flex-1 justify-between\">\r\n        <h3\r\n          className={`font-medium ${\r\n            auth.taskList.find((elem) => elem.id === id).done ? \"done\" : \"\"\r\n          }`}\r\n        >\r\n          {title}\r\n        </h3>\r\n        <p className=\"text-gray-500\">{date}</p>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n","import { enUS } from \"date-fns/locale\";\r\n\r\nexport const daysInWeek = ({ locale = enUS }) => [\r\n  { day: 0, label: locale.localize?.day(0) },\r\n  { day: 1, label: locale.localize?.day(1) },\r\n  { day: 2, label: locale.localize?.day(2) },\r\n  { day: 3, label: locale.localize?.day(3) },\r\n  { day: 4, label: locale.localize?.day(4) },\r\n  { day: 5, label: locale.localize?.day(5) },\r\n  { day: 6, label: locale.localize?.day(6) },\r\n];\r\n","import React, { useContext } from \"react\";\r\nimport { useMonthlyCalendar } from \"@zach.codes/react-calendar\";\r\nimport { daysInWeek } from \"../shared\";\r\nimport { format, getDay, isSameDay } from \"date-fns\";\r\n\r\nconst MonthlyBodyContext = React.createContext({});\r\n\r\nexport function useMonthlyBody() {\r\n  return useContext(MonthlyBodyContext);\r\n}\r\n\r\nexport const handleOmittedDays = ({ days, omitDays, locale }) => {\r\n  let headings = daysInWeek({ locale });\r\n  let daysToRender = days;\r\n\r\n  //omit the headings and days of the week that were passed in\r\n  if (omitDays) {\r\n    headings = daysInWeek({ locale }).filter(\r\n      (day) => !omitDays.includes(day.day)\r\n    );\r\n    daysToRender = days.filter((day) => !omitDays.includes(getDay(day)));\r\n  }\r\n\r\n  // omit the padding if an omitted day was before the start of the month\r\n  let firstDayOfMonth = getDay(daysToRender[0]);\r\n  if (omitDays) {\r\n    let subtractOmittedDays = omitDays.filter(\r\n      (day) => day < firstDayOfMonth\r\n    ).length;\r\n    firstDayOfMonth = firstDayOfMonth - subtractOmittedDays;\r\n  }\r\n  let padding = new Array(firstDayOfMonth).fill(0);\r\n\r\n  return { headings, daysToRender, padding };\r\n};\r\n\r\n//to prevent these from being purged in production, we make a lookup object\r\nconst headingClasses = {\r\n  l3: \"lg:grid-cols-3\",\r\n  l4: \"lg:grid-cols-4\",\r\n  l5: \"lg:grid-cols-5\",\r\n  l6: \"lg:grid-cols-6\",\r\n  l7: \"lg:grid-cols-7\",\r\n};\r\n\r\nfunction MonthlyBody({ omitDays, events, children, modal }) {\r\n  let { days, locale } = useMonthlyCalendar();\r\n  let { headings, daysToRender, padding } = handleOmittedDays({\r\n    days,\r\n    omitDays,\r\n    locale,\r\n  });\r\n\r\n  const classes = [];\r\n\r\n  if (modal) {\r\n    classes.push(\"disabled\");\r\n  }\r\n\r\n  let headingClassName = \"border-b-2 p-2 border-r-2 lg:block hidden\";\r\n  return (\r\n    <div className={classes.join(\" \")}>\r\n      <div className=\"bg-white border-l-2 border-t-2\">\r\n        <div\r\n          className={`grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 ${\r\n            headingClasses[`l${headings.length}`]\r\n          }`}\r\n        >\r\n          {headings.map((day) => (\r\n            <div\r\n              key={day.day}\r\n              className={headingClassName}\r\n              aria-label=\"Day of Week\"\r\n            >\r\n              {day.label}\r\n            </div>\r\n          ))}\r\n          {padding.map((_, index) => (\r\n            <div\r\n              key={index}\r\n              className={headingClassName}\r\n              aria-label=\"Empty Day\"\r\n            />\r\n          ))}\r\n          {daysToRender.map((day) => (\r\n            <MonthlyBodyContext.Provider\r\n              key={day.toISOString()}\r\n              value={{\r\n                day,\r\n                events: events.filter((data) => isSameDay(data.date, day)),\r\n              }}\r\n            >\r\n              {children}\r\n            </MonthlyBodyContext.Provider>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MonthlyDay({ renderDay, setModal }) {\r\n  let { locale } = useMonthlyCalendar();\r\n  let { day, events } = useMonthlyBody();\r\n  let dayNumber = format(day, \"d\", { locale });\r\n\r\n  const openModal = (day) => {\r\n    setModal(day);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id={`${day.getDate()}`}\r\n      aria-label={`Events for day ${dayNumber}`}\r\n      className=\"h-48 p-2 border-b-2 border-r-2 hover-day-body\"\r\n      onClick={(e) => {\r\n        openModal(day);\r\n      }}\r\n    >\r\n      <div className=\"flex justify-between\">\r\n        <div className=\"font-bold\">{dayNumber}</div>\r\n        <div className=\"lg:hidden block\">{format(day, \"EEEE\", { locale })}</div>\r\n      </div>\r\n      <ul className=\"divide-gray-200 divide-y overflow-hidden max-h-36 overflow-y-auto\">\r\n        {renderDay(events)}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { MonthlyBody, MonthlyDay };\r\n","import { React } from \"react\";\r\nimport { useMonthlyCalendar } from \"@zach.codes/react-calendar\";\r\nimport { format, getYear, addMonths, subMonths } from \"date-fns\";\r\n\r\nexport const MonthlyNav = () => {\r\n  let { currentMonth, onCurrentMonthChange } = useMonthlyCalendar();\r\n\r\n  return (\r\n    <div className=\"nav-flex mb-4\">\r\n      <button\r\n        onClick={() => {\r\n          onCurrentMonthChange(subMonths(currentMonth, 1));\r\n        }}\r\n        className=\"cursor-pointer nav-button\"\r\n      >\r\n        <i className=\"material-icons\">arrow_back</i>\r\n      </button>\r\n      <div className=\"ml-4 mr-4 w-32 text-center nav-month\">\r\n        {format(\r\n          currentMonth,\r\n          getYear(currentMonth) === getYear(new Date()) ? \"LLLL\" : \"LLLL yyyy\"\r\n        )}\r\n      </div>\r\n      <button\r\n        onClick={() => onCurrentMonthChange(addMonths(currentMonth, 1))}\r\n        className=\"cursor-pointer nav-button\"\r\n      >\r\n        <i className=\"material-icons\">arrow_forward</i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import { useCallback } from \"react\";\r\n\r\nexport const useMessage = () => {\r\n  return useCallback((text) => {\r\n    if (window.M && text) {\r\n      window.M.toast({ html: text });\r\n    }\r\n  }, []);\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContex\";\r\nimport { useHttp } from \"../hooks/http.hook\";\r\nimport { useMessage } from \"../hooks/message.hook\";\r\n\r\nexport function TodoItem(props) {\r\n  const { error, clearError } = useHttp();\r\n  const [edit, setEdit] = useState(false);\r\n  const auth = useContext(AuthContext);\r\n  const message = useMessage();\r\n\r\n  const [formEdit, setFormEdit] = useState({\r\n    title: props.title,\r\n    content: props.content,\r\n    date: props.date,\r\n    done: props.done,\r\n  });\r\n\r\n  const changeEditForm = (event) => {\r\n    setFormEdit({ ...formEdit, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.M.updateTextFields();\r\n  }, [edit]);\r\n\r\n  useEffect(() => {\r\n    message(error);\r\n    clearError();\r\n  }, [error, message, clearError]);\r\n\r\n  if (edit) {\r\n    return (\r\n      <li className=\"collection-tasks\">\r\n        <div className=\"content-task\">\r\n          <a\r\n            href=\"#!\"\r\n            style={{ width: \"5%\" }}\r\n            className={\r\n              !auth.taskList.find((elem) => elem.id === props.id).done\r\n                ? \"active-task\"\r\n                : \"done-task\"\r\n            }\r\n            onClick={() => props.setDoneTaskById(props.id)}\r\n          >\r\n            <i className=\"material-icons\">grade</i>\r\n          </a>\r\n          <div className=\"left-margin\" style={{ width: \"95%\" }}>\r\n            <div className=\"input-field col\">\r\n              <input\r\n                id=\"title\"\r\n                type=\"text\"\r\n                className=\"validate\"\r\n                name=\"title\"\r\n                onChange={changeEditForm}\r\n                value={formEdit.title}\r\n              />\r\n              <label htmlFor=\"title\">Название</label>\r\n            </div>\r\n            <div className=\"input-field col\">\r\n              <textarea\r\n                id=\"icon_prefix2\"\r\n                className=\"materialize-textarea textarea-task\"\r\n                name=\"content\"\r\n                onChange={changeEditForm}\r\n                value={formEdit.content}\r\n              ></textarea>\r\n              <label htmlFor=\"icon_prefix2\">Описание</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"nav-task\">\r\n          <a\r\n            href=\"#!\"\r\n            className=\"remove-task\"\r\n            title=\"Применить\"\r\n            style={{ color: \"rgb(77,47,194)\" }}\r\n            onClick={() => {\r\n              props.sendEditTask(formEdit, props.id);\r\n            }}\r\n          >\r\n            <i className=\"material-icons\">send</i>\r\n          </a>\r\n          <a\r\n            href=\"#!\"\r\n            className=\"remove-task\"\r\n            title=\"Изменить\"\r\n            onClick={() => setEdit(false)}\r\n          >\r\n            <i className=\"material-icons\">create</i>\r\n          </a>\r\n          <a\r\n            href=\"#!\"\r\n            className=\"remove-task\"\r\n            title=\"Удалить\"\r\n            onClick={() => props.removeTaskById(props.id)}\r\n          >\r\n            <i className=\"material-icons\">delete</i>\r\n          </a>\r\n        </div>\r\n      </li>\r\n    );\r\n  } else\r\n    return (\r\n      <li className=\"collection-tasks\">\r\n        <div className=\"content-task\">\r\n          <a\r\n            href=\"#!\"\r\n            className={\r\n              !auth.taskList.find((elem) => elem.id === props.id).done\r\n                ? \"active-task\"\r\n                : \"done-task\"\r\n            }\r\n            onClick={() => props.setDoneTaskById(props.id)}\r\n          >\r\n            <i className=\"material-icons\">grade</i>\r\n          </a>\r\n          <div className=\"left-margin\">\r\n            <h1\r\n              className={\r\n                !auth.taskList.find((elem) => elem.id === props.id).done\r\n                  ? \"title-task\"\r\n                  : \"done-title-task\"\r\n              }\r\n            >\r\n              {props.title}\r\n            </h1>\r\n            <p>{props.content}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"nav-task\">\r\n          <a\r\n            href=\"#!\"\r\n            className=\"remove-task\"\r\n            title=\"Изменить\"\r\n            onClick={() => setEdit(true)}\r\n          >\r\n            <i className=\"material-icons\">create</i>\r\n          </a>\r\n          <a\r\n            href=\"#!\"\r\n            className=\"remove-task left-margin\"\r\n            title=\"Удалить\"\r\n            onClick={() => props.removeTaskById(props.id)}\r\n          >\r\n            <i className=\"material-icons\">delete</i>\r\n          </a>\r\n        </div>\r\n      </li>\r\n    );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { TodoItem } from \"./TodoItem\";\r\nimport { AuthContext } from \"../context/AuthContex\";\r\nimport { useHttp } from \"../hooks/http.hook\";\r\nimport { useMessage } from \"../hooks/message.hook\";\r\n\r\nexport function Modal({ closeModal, items, day }) {\r\n  const auth = useContext(AuthContext);\r\n  const message = useMessage();\r\n\r\n  const { request, error, clearError } = useHttp();\r\n\r\n  const [form, setForm] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n    hours: \"\",\r\n    minutes: \"\",\r\n    date: \"\",\r\n  });\r\n\r\n  const changeForm = (event) => {\r\n    setForm({ ...form, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const addTask = async () => {\r\n    try {\r\n      if (!form.title || !form.content || !form.hours || !form.minutes) {\r\n        throw new Error(\"Заполните все поля.\");\r\n      }\r\n      const dateR = `${day.getFullYear()}-${\r\n        day.getMonth() < 10\r\n          ? \"0\" + JSON.stringify(day.getMonth() + 1)\r\n          : JSON.stringify(day.getMonth() + 1)\r\n      }-${\r\n        day.getDate() < 10\r\n          ? \"0\" + JSON.stringify(day.getDate())\r\n          : JSON.stringify(day.getDate())\r\n      }T${form.hours < 10 ? \"0\" + form.hours : form.hours}:${\r\n        form.minutes < 10 ? \"0\" + form.minutes : form.minutes\r\n      }:00`;\r\n      const data = await request(`/tasks/${auth.userId}`, \"POST\", {\r\n        title: form.title,\r\n        content: form.content,\r\n        date: dateR, //\"2021-06-24T10:30:00.000Z\"\r\n      });\r\n      if (data) {\r\n        const { title, content, date, done, id } = data;\r\n        const result = { title, content, date: new Date(date), done, id };\r\n        auth.setTaskList(auth.taskList.concat(result));\r\n      } else throw new Error(\"Неверный формат ввода\");\r\n    } catch (error) {\r\n      message(error.message);\r\n    }\r\n  };\r\n\r\n  const removeTask = async (id) => {\r\n    try {\r\n      const data = await request(`/tasks/${id}`, \"delete\");\r\n      if (!data) throw new Error(\"Задачи не существует.\");\r\n      else if (data.status) {\r\n        auth.changeEvents(auth.userId);\r\n        message(data.message);\r\n      } else message(data.message);\r\n    } catch (error) {\r\n      message(error.message);\r\n    }\r\n  };\r\n\r\n  const setDoneTask = async (id) => {\r\n    try {\r\n      const setDoneValue = () => {\r\n        return new Promise((resolve, reject) => {\r\n          const result = auth.taskList.find((elem) => elem.id === id);\r\n          if (result.done) {\r\n            result.done = false;\r\n            resolve(result);\r\n          } else {\r\n            result.done = true;\r\n            resolve(result);\r\n          }\r\n          reject();\r\n        });\r\n      };\r\n      let result = await setDoneValue();\r\n      await request(`/tasks/${id}`, \"PUT\", {\r\n        title: result.title,\r\n        content: result.content,\r\n        date: result.date,\r\n        done: result.done,\r\n      });\r\n      auth.setTaskList(auth.taskList);\r\n    } catch (error) {\r\n      message(error.message);\r\n    }\r\n  };\r\n\r\n  const sendEdit = async (editForm, taskID) => {\r\n    try {\r\n      if (!editForm.title || !editForm.content) {\r\n        throw new Error(\"Заполните все поля.\");\r\n      }\r\n      const setValue = () => {\r\n        return new Promise((resolve, reject) => {\r\n          const result = auth.taskList.find((elem) => elem.id === taskID);\r\n          if (result) {\r\n            result.title = editForm.title;\r\n            result.content = editForm.content;\r\n            resolve(result);\r\n          }\r\n          reject();\r\n        });\r\n      };\r\n      let result = await setValue();\r\n      await request(`/tasks/${taskID}`, \"PUT\", {\r\n        title: result.title,\r\n        content: result.content,\r\n        date: result.date,\r\n        done: result.done,\r\n      });\r\n      auth.setTaskList(auth.taskList);\r\n      message(\"Задача изменена\");\r\n    } catch (error) {\r\n      message(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    message(error);\r\n    clearError();\r\n  }, [error, message, clearError]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div id=\"modal1\" className=\"modal modal-fixed-footer\">\r\n        <div className=\"modal-content\">\r\n          <ul>\r\n            {items\r\n              .filter((elem) => {\r\n                return (\r\n                  elem.date.getDate() === day.getDate() &&\r\n                  elem.date.getMonth() === day.getMonth()\r\n                );\r\n              })\r\n              .map((item, index) => {\r\n                return (\r\n                  <TodoItem\r\n                    setDoneTaskById={setDoneTask}\r\n                    removeTaskById={removeTask}\r\n                    title={item.title}\r\n                    content={item.content}\r\n                    date={item.date}\r\n                    indexItem={index}\r\n                    id={item.id}\r\n                    done={item.done}\r\n                    sendEditTask={sendEdit}\r\n                  />\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <div className=\"footer-nav-block\">\r\n            <div className=\"footer-add-task\">\r\n              <div className=\"row\">\r\n                <form className=\"col s12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"input-field col s5\">\r\n                      <i className=\"material-icons prefix\">title</i>\r\n                      <input\r\n                        id=\"titleAdd\"\r\n                        type=\"text\"\r\n                        className=\"validate\"\r\n                        name=\"title\"\r\n                        onChange={changeForm}\r\n                      />\r\n                      <label htmlFor=\"titleAdd\">Название</label>\r\n                    </div>\r\n                    <div className=\"input-field col s3\">\r\n                      <i className=\"material-icons prefix\">access_time</i>\r\n                      <input\r\n                        id=\"hours\"\r\n                        type=\"text\"\r\n                        className=\"validate\"\r\n                        name=\"hours\"\r\n                        onChange={changeForm}\r\n                      />\r\n                      <label htmlFor=\"hours\">Часы</label>\r\n                    </div>\r\n                    <div className=\"input-field col s3\">\r\n                      <i className=\"material-icons prefix\">access_time</i>\r\n                      <input\r\n                        id=\"minutes\"\r\n                        type=\"text\"\r\n                        className=\"validate\"\r\n                        name=\"minutes\"\r\n                        onChange={changeForm}\r\n                      />\r\n                      <label htmlFor=\"minutes\">Минуты</label>\r\n                    </div>\r\n                    <div className=\"input-field col s12\">\r\n                      {/* <i className=\"material-icons prefix\">mode_edit</i> */}\r\n                      <textarea\r\n                        id=\"icon_prefix2\"\r\n                        className=\"materialize-textarea textarea-task\"\r\n                        name=\"content\"\r\n                        onChange={changeForm}\r\n                      ></textarea>\r\n                      <label htmlFor=\"icon_prefix2\">Описание</label>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n            <div className=\"footer-nav-content\">\r\n              <div className=\"footer-nav\">\r\n                <a className=\"button-add-task\" onClick={addTask} href=\"#!\">\r\n                  <i className=\"Medium material-icons\">add</i>\r\n                  Добавить задачу\r\n                </a>\r\n                <a\r\n                  href=\"#!\"\r\n                  className=\"modal-close waves-effect waves-green btn-flat\"\r\n                  onClick={closeModal}\r\n                >\r\n                  Закрыть\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContex\";\r\nimport { format, startOfMonth } from \"date-fns\";\r\nimport { useHttp } from \"../hooks/http.hook\";\r\nimport { MonthlyCalendar } from \"@zach.codes/react-calendar\";\r\nimport { DefaultMonthlyEventItem } from \"../components/MonthlyEventItems\";\r\nimport { MonthlyBody, MonthlyDay } from \"../components/MonthlyBody\";\r\nimport { MonthlyNav } from \"../components/MonthlyNav\";\r\nimport { Modal } from \"../components/Modal\";\r\nimport { useMessage } from \"../hooks/message.hook\";\r\n\r\nconst TasksPage = () => {\r\n  const [currentMonth, setCurrentMonth] = useState(startOfMonth(new Date()));\r\n  const message = useMessage();\r\n  const { error, clearError } = useHttp();\r\n  const auth = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    if (JSON.stringify(auth.taskList) === \"[]\" && auth.userId) {\r\n      console.log(\"request...\");\r\n      auth.changeEvents(auth.userId);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    message(error);\r\n    clearError();\r\n  }, [error, message, clearError]);\r\n\r\n  const [modal, setModal] = useState(null);\r\n\r\n  const closeModal = () => {\r\n    setModal(null);\r\n  };\r\n\r\n  return (\r\n    <MonthlyCalendar\r\n      currentMonth={currentMonth}\r\n      onCurrentMonthChange={(date) => {\r\n        setCurrentMonth(date);\r\n      }}\r\n    >\r\n      {modal && (\r\n        <Modal closeModal={closeModal} items={auth.taskList} day={modal} />\r\n      )}\r\n      <MonthlyNav />\r\n      <MonthlyBody events={auth.taskList} modal={modal}>\r\n        <MonthlyDay\r\n          renderDay={(data) =>\r\n            data.map((item, index) => (\r\n              <DefaultMonthlyEventItem\r\n                key={index}\r\n                title={item.title}\r\n                date={format(item.date, \"k:mm\")}\r\n                id={item.id}\r\n              />\r\n            ))\r\n          }\r\n          setModal={setModal}\r\n        />\r\n      </MonthlyBody>\r\n    </MonthlyCalendar>\r\n  );\r\n};\r\n\r\nexport { TasksPage };\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHttp } from \"../hooks/http.hook\";\r\nimport { useMessage } from \"../hooks/message.hook\";\r\nimport { AuthContext } from \"../context/AuthContex\";\r\n\r\nfunction AuthPage() {\r\n  const auth = useContext(AuthContext);\r\n  const { loading, request, error, clearError } = useHttp();\r\n\r\n  const [form, setForm] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const message = useMessage();\r\n\r\n  useEffect(() => {\r\n    message(error);\r\n    clearError();\r\n  }, [error, message, clearError]);\r\n\r\n  useEffect(() => {\r\n    window.M.updateTextFields();\r\n  }, []);\r\n\r\n  const changeHandler = (event) => {\r\n    setForm({ ...form, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const registerHandler = async () => {\r\n    try {\r\n      const data = await request(\"/register\", \"POST\", {\r\n        ...form,\r\n      });\r\n      message(data.message);\r\n    } catch (error) {}\r\n  };\r\n\r\n  const loginHandler = async () => {\r\n    try {\r\n      const data = await request(\"/login\", \"POST\", { ...form });\r\n      auth.login(data.token, data.userId);\r\n      auth.changeEvents(data.userId);\r\n      console.log(\"Data:\", data);\r\n    } catch (error) {}\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s4 offset-s4\">\r\n        <div className=\"card blue-grey darken-1\">\r\n          <div className=\"card-content white-text\">\r\n            <span className=\"card-title\">Авторизация</span>\r\n            <div>\r\n              <div className=\"input-field\">\r\n                <input\r\n                  placeholder=\"Введите почту\"\r\n                  id=\"email\"\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  onChange={changeHandler}\r\n                />\r\n                <label htmlFor=\"email\">Почта</label>\r\n              </div>\r\n              <div className=\"input-field\">\r\n                <input\r\n                  placeholder=\"Введите пароль\"\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  onChange={changeHandler}\r\n                />\r\n                <label htmlFor=\"password\">Пароль</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-action\">\r\n            <button\r\n              className=\"waves-effect waves-light btn-small\"\r\n              onClick={loginHandler}\r\n              disabled={loading}\r\n            >\r\n              Войти\r\n            </button>\r\n            <button\r\n              className=\"waves-effect waves-light btn-small left-margin\"\r\n              onClick={registerHandler}\r\n              disabled={loading}\r\n            >\r\n              Регистрация\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { AuthPage };\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { TasksPage } from \"./pages/TasksPage\";\r\nimport { AuthPage } from \"./pages/AuthPage\";\r\n\r\nexport const useRoutes = (isAuthenticated) => {\r\n  if (isAuthenticated) {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/tasks\" exact>\r\n          <TasksPage />\r\n        </Route>\r\n        <Redirect to=\"/tasks\" />\r\n      </Switch>\r\n    );\r\n  }\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        <AuthPage />\r\n      </Route>\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  );\r\n};\r\n","import { useState, useCallback, useEffect } from \"react\";\r\n\r\nconst storageName = \"userData\";\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n\r\n  const login = useCallback((jwtToken, id) => {\r\n    setToken(jwtToken);\r\n    setUserId(id);\r\n    localStorage.setItem(\r\n      storageName,\r\n      JSON.stringify({ userId: id, token: jwtToken })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setUserId(null);\r\n    localStorage.removeItem(storageName);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem(storageName));\r\n    if (data && data.token) {\r\n      login(data.token, data.userId);\r\n    }\r\n  }, [login]);\r\n\r\n  return { login, logout, token, userId };\r\n};\r\n","import { React, useContext } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContex\";\r\n\r\nfunction NavBar() {\r\n  const history = useHistory();\r\n  const auth = useContext(AuthContext);\r\n\r\n  const logoutHandler = (e) => {\r\n    e.preventDefault();\r\n    auth.logout();\r\n    auth.setTaskList([]);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-wrapper blue-grey darken-1\">\r\n        <NavLink to=\"/tasks\" className=\"brand-logo left-margin\">\r\n          ToDo\r\n        </NavLink>\r\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n          <li>\r\n            <NavLink to=\"/tasks\">Задачи</NavLink>\r\n          </li>\r\n          <li>\r\n            <a href=\"/\" onClick={logoutHandler}>\r\n              Выйти\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport { NavBar };\r\n","import React from \"react\";\nimport \"materialize-css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { useRoutes } from \"./routes\";\nimport { useAuth } from \"./hooks/auth.hook\";\nimport { AuthContext } from \"./context/AuthContex\";\nimport { NavBar } from \"./components/NavBar\";\nimport { useTask } from \"./hooks/task.hook\";\n\nfunction App() {\n  const { login, logout, token, userId } = useAuth();\n  const { taskList, changeEvents, setTaskList } = useTask();\n  const isAuthenticated = !!token;\n\n  const routes = useRoutes(isAuthenticated);\n  return (\n    <AuthContext.Provider\n      value={{\n        token,\n        login,\n        logout,\n        userId,\n        taskList,\n        changeEvents,\n        setTaskList,\n      }}\n    >\n      <Router>\n        {isAuthenticated && <NavBar />}\n        <div className=\"calendar-container\">{routes}</div>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import { useState, useCallback } from \"react\";\r\nimport { useHttp } from \"./http.hook\";\r\n\r\nexport const useTask = () => {\r\n  const { request } = useHttp();\r\n  const [taskList, setTaskList] = useState([]);\r\n\r\n  const changeEvents = useCallback(\r\n    async (userId) => {\r\n      const data = await request(`/tasks/${userId}`, \"GET\");\r\n      const result = data.map((elem) => {\r\n        const { title, date, content, done, id } = elem;\r\n        return { title: title, content, date: new Date(date), done, id };\r\n      });\r\n      setTaskList(result);\r\n    },\r\n    [request]\r\n  );\r\n\r\n  return { taskList, changeEvents, setTaskList };\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}